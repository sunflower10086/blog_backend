syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";  // 导入 validate 库

package api.admin.v1;

option go_package = "sunflower-blog-svc/api/admin/v1;v1";
option java_multiple_files = true;
option java_package = "api.admin.v1";

service Poster {
	rpc CreatePost (CreatePostRequest) returns (Post) {
		option (google.api.http) = {
			post: "/api/v1/post"
			body: "*"
		};
	};

	rpc UpdatePost (UpdatePostRequest) returns (Post) {
		option (google.api.http) = {
			put: "/api/v1/post"
			body: "*"
		};
	};

	rpc DeletePost (DeletePostRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/api/v1/post/{post_id}"
		};
	};

	rpc GetPost (GetPostRequest) returns (Post) {
		option (google.api.http) = {
			get: "/api/v1/post/{post_id}"
		};
	};

	rpc ListPost (ListPostsRequest) returns (ListPostsResponse) {
		option (google.api.http) = {
			get: "/api/v1/post"
		};
	};
}

// 获取博客列表的请求
message ListPostsRequest {
	int32 page = 1 [(validate.rules).int32.gt = 0];
	int32 page_size = 2 [(validate.rules).int32.gt = 0];
}

// 获取博客列表的响应
message ListPostsResponse {
	repeated PostBaseInfo posts = 1;
	int32 total = 2;
}

// 获取单个博客的请求
message GetPostRequest {
	string post_id = 1 [(validate.rules).string.min_len = 1];
}

message PostBaseInfo {
	string id = 1;
	string title = 2;
	string cover = 3;
	repeated string tags = 4;
	string description = 5;
	int32 created_at = 6;
	int32 updated_at = 7;
	string categories = 8;
}

// 博客实体
message Post {
	PostBaseInfo base_info = 1;
	string content = 2;
}

message CreatePostRequest {
	Post post = 1 [(validate.rules).message.required = true];
}

message UpdatePostRequest {
	Post post = 1 [(validate.rules).message.required = true];
}

message DeletePostRequest {
	string post_id = 1 [(validate.rules).string.min_len = 1];
}