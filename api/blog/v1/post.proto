syntax = "proto3";

package blog.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";  // 导入 validate 库
import "google/protobuf/empty.proto";
import "blog/v1/common.proto";

option go_package = "sunflower-blog-svc/api/blog/v1;v1";

// 博客服务定义
service Poster {
  rpc CreatePost (CreatePostRequest) returns (Post){
    option (google.api.http) = {
      post: "/api/v1/post"
      body: "*"
    };
  };

  rpc UpdatePost (UpdatePostRequest) returns (Post){
    option (google.api.http) = {
      put: "/api/v1/post"
      body: "*"
    };
  };

  rpc DeletePost (DeletePostRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/api/v1/post/{post_id}"
    };
};

  // 获取博客列表
  rpc ListPosts (ListPostsRequest) returns (ListPostsResponse) {
    option (google.api.http) = {
      get: "/api/v1/posts"
    };
  }

  // 获取单个博客详情
  rpc GetPost (GetPostRequest) returns (Post) {
    option (google.api.http) = {
      get: "/api/v1/post/{post_id}"
    };
  }

  // ----------------------- tag -----------------------------
  rpc CreateTags (CreateTagsReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/tags"
      body: "*"
    };
  }

  rpc ListTags (google.protobuf.Empty) returns (ListTagsResp) {
    option (google.api.http) = {
      get: "/api/v1/tags"
    };
  }

  rpc DelTags (blog.v1.Id) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/tags/{id}"
    };
  }

  rpc StatTags (google.protobuf.Empty) returns (StatTagsResp) {
    option (google.api.http) = {
      get: "/api/v1/tags/stat"
    };
  }

  // ----------------------- category -----------------------------
  rpc ListCategory (google.protobuf.Empty) returns (ListCategoryResp) {
    option (google.api.http) = {
      get: "/api/v1/categories"
    };
  }
}

message ListCategoryResp {
  message Category {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
  }
  repeated Category categories = 1 [json_name = "categories"];
}

message Tag {
  int32 id = 1 [json_name = "id"];
  string name = 2 [json_name = "name"];
}

message StatTagsResp {
  message TagStat {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
    int32 count = 3 [json_name = "count"];
  }
  repeated TagStat tagStat = 1 [json_name = "tag_stat"];
}

message CreateTagsReq {
  repeated string names = 1 [json_name = "names"];
}

message ListTagsResp {
  repeated Tag tags = 1 [json_name = "tags"];
}

// 获取博客列表的请求
message ListPostsRequest {
  int32 page = 1 [(validate.rules).int32.gt = 0, json_name = "page"];
  int32 page_size = 2 [(validate.rules).int32.gt = 0, json_name = "page_size"];
}

// 获取博客列表的响应
message ListPostsResponse {
  repeated Post posts = 1 [json_name = "posts"];
  int32 total = 2 [json_name = "total"];
}

// 获取单个博客的请求
message GetPostRequest {
  int32 post_id = 1 [(validate.rules).int32.gte = 1, json_name = "post_id"];
}

// 博客实体
message Post {
  int32 id = 1 [json_name = "id"];
  string title = 2 [json_name = "title"];
  string cover = 3 [json_name = "cover"];
  repeated int32 tags = 4 [json_name = "tags"];
  string description = 5 [json_name = "description"];
  int32 created_at = 6 [json_name = "created_at"];
  int32 updated_at = 7 [json_name = "updated_at"];
  int32 category_id = 8 [json_name = "category_id"];
  int32 views = 9 [json_name = "views"];
  string content = 10 [json_name = "content"];
}

message CreatePostRequest {
  string title = 1 [json_name = "title"];
  string cover = 2 [json_name = "cover"];
  repeated int32 tags = 3 [json_name = "tags"];
  string description = 4 [json_name = "description"];
  int32 category_id = 5 [json_name = "category_id"];
  string content = 6 [json_name = "content"];
}

message UpdatePostRequest {
  Post post = 1 [(validate.rules).message.required = true, json_name = "post"];
}

message DeletePostRequest {
  int32 post_id = 1 [(validate.rules).int32.gt = 0, json_name = "post_id"];
}